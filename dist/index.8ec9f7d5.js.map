{"mappings":"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","sources":["assets/js/app.js","assets/js/api.js","assets/js/module.js"],"sourcesContent":["/**\n * @license MIT\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\n\nimport { fetchData, url } from \"./api.js\";\nimport * as module from \"./module.js\";\n\n/**\n * Add event Listener on multiple elements\n * @param {NodeList} elements Elements Node array\n * @param {string} eventType Event type. e.g.: \"click\", \"mouseover\"\n * @param {Function} callback Callback function\n */\nconst addEventOnElements = function (elements, eventType, callback) {\n  for (const element of elements) element.addEventListener(eventType, callback);\n};\n\n/**\n * Toggle search in mobile devices\n */\n\nconst searchView = document.querySelector(\"[data-search-view]\");\nconst searchTogglers = document.querySelectorAll(\"[data-search-toggler]\");\n\nconst toggleSearch = () => searchView.classList.toggle(\"active\");\naddEventOnElements(searchTogglers, \"click\", toggleSearch);\n\n/**\n * SEARCH INTEGRATION\n */\nconst searchField = document.querySelector(\"[data-search-field]\");\nconst searchResult = document.querySelector(\"[data-search-result]\");\n\nlet searchTimeout = null;\nconst searchTimeoutDuration = 500;\n\nsearchField.addEventListener(\"input\", function () {\n  searchTimeout ?? clearTimeout(searchTimeout);\n  // if (searchTimeout !== null && searchTimeout !== undefined) {\n  //   clearTimeout(searchTimeout);\n  // }\n\n  if (!searchField.value) {\n    searchResult.classList.remove(\"active\");\n    searchResult.innerHTML = \"\";\n    searchField.classList.remove(\"searching\");\n  } else {\n    searchField.classList.add(\"searching\");\n  }\n\n  if (searchField.value) {\n    searchTimeout = setTimeout(() => {\n      fetchData(url.geo(searchField.value), function (locations) {\n        searchField.classList.remove(\"searching\");\n        searchResult.classList.add(\"active\");\n        searchResult.innerHTML = `\n        <ul class=\"view-list\" data-search-list></ul>\n        `;\n\n        const /** NodeList */ items = [];\n\n        for (const { name, lat, lon, country, state } of locations) {\n          const searchItem = document.createElement(\"li\");\n          searchItem.classList.add(\"view-item\");\n\n          searchItem.innerHTML = `\n          <span class=\"m-icon\">location_on</span>\n\n          <div>\n              <p class=\"item-title\">${name}</p>\n\n              <p class=\"label-2 item-subtitle\">${state || \"\"} ${country}</p>\n          </div>\n\n          <a href=\"#/weather?lat=${lat}&lon=${lon}\" class=\"item-link has-state\" aria-label=\"${name} weather\" data-search-toggler></a>\n          `;\n\n          searchResult\n            .querySelector(\"[data-search-list]\")\n            .appendChild(searchItem);\n\n          items.push(searchItem.querySelector(\"[data-search-toggler]\"));\n        }\n        addEventOnElements(items, \"click\", function () {\n          toggleSearch();\n          searchResult.classList.remove(\"active\");\n        });\n      });\n    }, searchTimeoutDuration);\n  }\n});\n\nconst container = document.querySelector(\"[data-container]\");\nconst loading = document.querySelector(\"[data-loading]\");\nconst currentLocationBtn = document.querySelector(\n  \"[data-current-location-btn]\"\n);\nconst errorContent = document.querySelector(\"[data-error-content]\");\n\n/**\n * Render all weather data in html page\n * @param {number} lat Latitude\n * @param {number} lon Longitude\n */\nexport const updateWeather = function (lat, lon) {\n  loading.style.display = \"grid\";\n  container.style.overflowY = \"hidden\";\n  container.classList.remove(\"fade-in\");\n  errorContent.style.display = \"none\";\n\n  const currentWeatherSection = document.querySelector(\n    \"[data-current-weather]\"\n  );\n  const highlightSection = document.querySelector(\"[data-highlights]\");\n  const hourlySection = document.querySelector(\"[data-hourly-forecast]\");\n  const forecastSection = document.querySelector(\"[data-5-day-forecast]\");\n\n  currentWeatherSection.innerHTML = \"\";\n  highlightSection.innerHTML = \"\";\n  hourlySection.innerHTML = \"\";\n  forecastSection.innerHTML = \"\";\n\n  if (window.location.hash === \"#/current-location\") {\n    currentLocationBtn.setAttribute(\"disabled\", \"\");\n  } else {\n    currentLocationBtn.removeAttribute(\"disabled\");\n  }\n\n  /**\n   * CURRENT WEATHER SECTION\n   */\n  fetchData(url.currentWeather(lat, lon), function (currentWeather) {\n    const {\n      weather,\n      dt: dateUnix,\n      sys: { sunrise: sunriseUnixUTC, sunset: sunsetUnixUTC },\n      main: { temp, feels_like, pressure, humidity },\n      visibility,\n      timezone,\n    } = currentWeather;\n\n    const [{ description, icon }] = weather;\n    // card-2\n    const card = document.createElement(\"div\");\n    card.classList.add(\"card\", \"card-lg\", \"current-weather-card\");\n    card.innerHTML = `\n    <h2 class=\"title-2 card-title\">Now</h2>\n\n    <div class=\"weapper\">\n      <p class=\"heading\">${parseInt(temp)}&deg;<sup>c</sup></p>\n      <img\n        src=\"./assets/images/weather_icons/${icon}.png\"\n        width=\"64\"\n        height=\"64\"\n        alt=\"${description}\"\n        class=\"weather-icon\"\n      />\n    </div>\n    <p class=\"body-3\">${description}</p>\n\n    <ul class=\"meta-list\">\n      <li class=\"meta-item\">\n        <span class=\"m-icon\">calendar_today</span>\n\n        <p class=\"title-3 meta-text\">${module.getDate(dateUnix, timezone)}</p>\n      </li>\n\n      <li class=\"meta-item\">\n        <span class=\"m-icon\">location_on</span>\n\n        <p class=\"title-3 meta-text\" data-location></p>\n      </li>\n    </ul>\n    `;\n\n    fetchData(url.reverseGeo(lat, lon), function ([{ name, country }]) {\n      card.querySelector(\"[data-location]\").innerHTML = `${name}, ${country}`;\n    });\n    currentWeatherSection.appendChild(card);\n\n    /**\n     * TODAY'S HIGHLIGHTS\n     */\n    fetchData(url.airPollution(lat, lon), function (airPollution) {\n      const [\n        {\n          main: { aqi },\n          components: { no2, o3, so2, pm2_5 },\n        },\n      ] = airPollution.list;\n\n      const card = document.createElement(\"div\");\n      card.classList.add(\"card\", \"card-lg\");\n      card.innerHTML = `\n      <h2 class=\"title-2\" id=\"highlights-label\">Todays Highlights</h2>\n\n      <div class=\"highlight-list\">\n        <div class=\"card card-sm highlight-card one\">\n          <h3 class=\"title-3\">Air Quality Index</h3>\n\n          <div class=\"wrapper\">\n            <span class=\"m-icon\">air</span>\n\n            <ul class=\"card-list\">\n              <li class=\"card-item\">\n                <p class=\"title-1\">${pm2_5.toPrecision(3)}</p>\n\n                <p class=\"label-1\">PM<sub>2.5</sub></p>\n              </li>\n              <li class=\"card-item\">\n                <p class=\"title-1\">${so2.toPrecision(3)}</p>\n\n                <p class=\"label-1\">SO<sub>2.5</sub></p>\n              </li>\n              <li class=\"card-item\">\n                <p class=\"title-1\">${no2.toPrecision(3)}</p>\n\n                <p class=\"label-1\">NO<sub>2</sub></p>\n              </li>\n              <li class=\"card-item\">\n                <p class=\"title-1\">${o3.toPrecision(3)}</p>\n\n                <p class=\"label-1\">O<sub>3</sub></p>\n              </li>\n            </ul>\n          </div>\n\n          <span class=\"badge aqi-${aqi} label-${aqi}\" title=\"${\n        module.aqiText[aqi]\n      }.message\n      )}\">\n      ${module.aqiText[aqi].level}\n      </span>\n        </div>\n\n        <div class=\"card card-sm highlight-card two\">\n          <h3 class=\"title-3\">Sunrise & Sunset</h3>\n\n          <div class=\"card-list\">\n            <div class=\"card-item\">\n              <span class=\"m-icon\">clear_day</span>\n              <div>\n                <p class=\"label-1\">Sunrise</p>\n\n                <p class=\"title-1\">${module.getTime(\n                  sunriseUnixUTC,\n                  timezone\n                )}</p>\n              </div>\n            </div>\n\n            <div class=\"card-item\">\n              <span class=\"m-icon\">clear_night</span>\n              <div>\n                <p class=\"label-1\">Sunset</p>\n\n                <p class=\"title-1\">${module.getTime(\n                  sunsetUnixUTC,\n                  timezone\n                )}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card card-sm highlight-card\">\n          <h3 class=\"title-3\">Humidity</h3>\n\n          <div class=\"wrapper\">\n            <span class=\"m-icon\">humidity_percentage</span>\n\n            <p class=\"title-1\">${humidity}<sub>%</sub></p>\n          </div>\n        </div>\n\n        <div class=\"card card-sm highlight-card\">\n          <h3 class=\"title-3\">Pressure</h3>\n\n          <div class=\"wrapper\">\n            <span class=\"m-icon\">airwave</span>\n\n            <p class=\"title-1\">${pressure}<sub>hPa</sub></p>\n          </div>\n        </div>\n\n        <div class=\"card card-sm highlight-card\">\n          <h3 class=\"title-3\">Visibility</h3>\n\n          <div class=\"wrapper\">\n            <span class=\"m-icon\">visibility</span>\n\n            <p class=\"title-1\">${visibility / 1000}<sub>km</sub></p>\n          </div>\n        </div>\n\n        <div class=\"card card-sm highlight-card\">\n          <h3 class=\"title-3\">Feels like</h3>\n\n          <div class=\"wrapper\">\n            <span class=\"m-icon\">thermostat</span>\n\n            <p class=\"title-1\">${parseInt(feels_like)}&deg;<sup>c</sup></p>\n          </div>\n        </div>\n      </div>\n      `;\n\n      highlightSection.appendChild(card);\n    });\n\n    /**\n     * 24H FORECAST SECTINO\n     */\n    fetchData(url.forecast(lat, lon), function (forecast) {\n      const {\n        list: forecastList,\n        city: { timezone },\n      } = forecast;\n\n      hourlySection.innerHTML = `\n      <h2 class=\"title-2\">Today at</h2>\n  \n      <div class=\"slider-container\">\n        <ul class=\"slider-list\" data-temp></ul>\n  \n        <ul class=\"slider-list\" data-wind></ul>\n      </div>\n      `;\n\n      for (const [index, data] of forecastList.entries()) {\n        if (index > 7) break;\n\n        const {\n          dt: dateTimeUnix,\n          main: { temp },\n          weather,\n          wind: { deg: windDirection, speed: windSpeed },\n        } = data;\n        const [{ icon, description }] = weather;\n\n        const tempLi = document.createElement(\"li\");\n        tempLi.classList.add(\"slider-item\");\n        tempLi.innerHTML = `\n          <div class=\"card card-sm slider-card\">\n            <p class=\"body-3\">${module.getHours(dateTimeUnix, timezone)}</p>\n  \n            <img\n              src=\"./assets/images/weather_icons/${icon}.png\"\n              width=\"48\"\n              height=\"48\"\n              loading=\"lazy\"\n              alt=\"${description}\"\n              class=\"weather-icon\"\n              title=\"${description}\"\n            />\n  \n            <p class=\"body-3\">${parseInt(temp)}&deg;</p>\n          </div>\n        `;\n\n        hourlySection.querySelector(\"[data-temp]\").appendChild(tempLi);\n\n        const windLi = document.createElement(\"li\");\n        windLi.classList.add(\"slider-item\");\n        windLi.innerHTML = `\n          <div class=\"card card-sm slider-card\">\n            <p class=\"body-3\">${module.getHours(dateTimeUnix, timezone)}</p>\n  \n            <img\n              src=\"./assets/images/weather_icons/direction.png\"\n              width=\"48\"\n              height=\"48\"\n              loading=\"lazy\"\n              style=\"transform: rotate(${windDirection - 180}deg)\"\n              class=\"weather-icon\"\n              title=\"\"\n            />\n  \n            <p class=\"body-3\">${parseInt(module.mps_to_km(windSpeed))} km/h</p>\n          </div>\n        `;\n        hourlySection.querySelector(\"[data-wind]\").appendChild(windLi);\n      }\n\n      /**\n       * 5 DAY FORECAST SECTION\n       */\n\n      forecastSection.innerHTML = `\n        <h2 class=\"title-2\" id=\"forecast-label\">5 Days Forecast</h2>\n        <div class=\"card card-lg forecast-card\">\n          <ul data-forecast-list></ul>\n        </div>\n      `;\n\n      for (let i = 7, len = forecastList.length; i < len; i += 8) {\n        // console.log(forecastList);\n        const {\n          main: { temp_max },\n          weather,\n          dt_txt,\n        } = forecastList[i];\n        // console.log(\n        //   `temp_max: ${temp_max}, weather: ${weather}, dt_txt: ${dt_txt}`\n        // );\n        const [{ icon, description }] = weather;\n        const date = new Date(dt_txt);\n        // console.log(date);\n        const li = document.createElement(\"li\");\n        li.classList.add(\"card-item\");\n\n        li.innerHTML = `\n          <div class=\"icon-wrapper\">\n            <img\n              src=\"./assets/images/weather_icons/${icon}.png\"\n              width=\"36\"\n              height=\"36\"\n              alt=\"${description}\"\n              class=\"weather-icon\"\n              title=\"${description}\"\n            />\n\n            <span class=\"span\">\n              <p class=\"title-2\">${parseInt(temp_max)}&deg;</p>\n            </span>\n          </div>\n\n          <p class=\"label-1\">${date.getDate()} ${\n          module.monthNames[date.getUTCMonth()]\n        }</p>\n\n          <p class=\"label-1\">${module.weekDayNames[date.getUTCDay()]}</p>\n        `;\n        forecastSection.querySelector(\"[data-forecast-list]\").appendChild(li);\n      }\n\n      loading.style.display = \"none\";\n      container.style.overflowY = \"overlay\";\n      container.classList.add(\"fade-in\");\n    });\n  });\n};\n\nexport const error404 = () => {\n  errorContent.style.display = \"flex\";\n};\n","/**\n * @license MIT\n * @fileoverview All api related stuff like api_key, api request etc.\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\n\nconst api_key = \"97e01642a861053504fb0d938b477326\";\n\n/**\n * Fetch data from server\n * @param {string} URL API url\n * @param {Function} callback callback\n */\nexport const fetchData = function (URL, callback) {\n  fetch(`${URL}&appid=${api_key}`)\n    .then((res) => res.json())\n    .then((data) => callback(data));\n};\n\nexport const url = {\n  currentWeather(lat, lon) {\n    return `https://api.openweathermap.org/data/2.5/weather?${lat}&${lon}&units=metric`;\n  },\n\n  forecast(lat, lon) {\n    return `https://api.openweathermap.org/data/2.5/forecast?${lat}&${lon}&units=metric`;\n  },\n\n  airPollution(lat, lon) {\n    return `http://api.openweathermap.org/data/2.5/air_pollution?${lat}&${lon}`;\n  },\n\n  reverseGeo(lat, lon) {\n    return `http://api.openweathermap.org/geo/1.0/reverse?${lat}&${lon}&limit=5`;\n  },\n\n  /**\n   * @param {string} query Search query e.g.: \"London\", \"New York\"\n   */\n  geo(query) {\n    return `http://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=5`;\n  },\n};\n","/**\n * @license MIT\n * @fileoverview All module functions\n * @copyright codewithsadee 2023 All rights reserved\n * @author codewithsadee <mohammadsadee24@gmail.com>\n */\n\n\"use strict\";\n\nexport const weekDayNames = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nexport const monthNames = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\n/**\n *\n * @param {number} dateUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Date string. formate: \"Sunday 10, Jan\"\n */\nexport const getDate = function (dateUnix, timezone) {\n  const date = new Date((dateUnix + timezone) * 1000);\n  const weekDayName = weekDayNames[date.getUTCDay()];\n  const monthName = monthNames[date.getUTCMonth()];\n\n  return `${weekDayName} ${date.getUTCDate()}, ${monthName}`;\n};\n\n/**\n *\n * @param {number} timeUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Time string. formate: \"HH:MM AM/PM\"\n */\nexport const getTime = function (timeUnix, timezone) {\n  const date = new Date((timeUnix + timezone) * 1000);\n  const hours = date.getUTCHours();\n  const minutes = date.getMinutes();\n  const period = hours >= 12 ? \"PM\" : \"AM\";\n\n  return `${hours % 12 || 12}:${minutes} ${period}`;\n};\n\n/**\n *\n * @param {number} timeUnix Unix date in seconds\n * @param {number} timezone Timezone shift from UTC in seconds\n * @returns {string} Time string. formate: \"HH AM/PM\"\n */\nexport const getHours = function (timeUnix, timezone) {\n  const date = new Date((timeUnix + timezone) * 1000);\n  const hours = date.getUTCHours();\n  const period = hours >= 12 ? \"PM\" : \"AM\";\n\n  return `${hours % 12 || 12} ${period}`;\n};\n\n/**\n *\n * @param {number} mps Meter per seconds\n * @returns {number} Kilometer per hours\n */\nexport const mps_to_km = (mps) => {\n  const mph = mps * 3600;\n\n  return mph / 1000;\n};\n\nexport const aqiText = {\n  1: {\n    level: \"Good\",\n    message:\n      \"Air quality is considered satisfactory, and air pollution poses little or no risk\",\n  },\n  2: {\n    level: \"Fair\",\n    message:\n      \"Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution\",\n  },\n  3: {\n    level: \"Moderate\",\n    message:\n      \"AMembers of sensitive  groups may experience health effects. The general public is not likely to be affected\",\n  },\n  4: {\n    level: \"Poor\",\n    message:\n      \"Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects\",\n  },\n\n  5: {\n    level: \"Very poor\",\n    message:\n      \"Health warnings of emergency conditions. The entire population is more likely to be affected.\",\n  },\n};\n"],"names":["$bgk2z","parcelRequire","$c4f32835aa967d92$var$addEventOnElements","elements","eventType","callback","element","addEventListener","$c4f32835aa967d92$var$searchView","document","querySelector","$c4f32835aa967d92$var$searchTogglers","querySelectorAll","$c4f32835aa967d92$var$toggleSearch","classList","toggle","$c4f32835aa967d92$var$searchField","$c4f32835aa967d92$var$searchResult","$c4f32835aa967d92$var$searchTimeout","clearTimeout","value","add","remove","innerHTML","setTimeout","fetchData","url","geo","locations","items","name","lat","lon","country","state","searchItem","createElement","appendChild","push","$c4f32835aa967d92$var$container","$c4f32835aa967d92$var$loading","$c4f32835aa967d92$var$currentLocationBtn","$c4f32835aa967d92$var$errorContent","$c4f32835aa967d92$export$86c3a28627b62f62","style","display","overflowY","currentWeatherSection","highlightSection","hourlySection","forecastSection","window","location","hash","setAttribute","removeAttribute","currentWeather","weather","dt","dateUnix","sys","sunrise","sunriseUnixUTC","sunset","sunsetUnixUTC","main","temp","feels_like","pressure","humidity","visibility","timezone","description","icon","card","parseInt","$7fv6d","getDate","reverseGeo","airPollution","aqi","components","no2","o3","so2","pm2_5","list","toPrecision","aqiText","level","getTime","forecast","forecastList","city","index","data","entries","dateTimeUnix","wind","deg","windDirection","speed","windSpeed","tempLi","getHours","windLi","mps_to_km","i","len","length","temp_max","dt_txt","date","Date","li","monthNames","getUTCMonth","weekDayNames","getUTCDay","$c4f32835aa967d92$export$adad2adf19dac5bc","$8330bbee356154af$export$8134c072fddab6a5","URL","fetch","then","res","json","$8330bbee356154af$export$128fa18b7194ef","query","$54720ec60cee9716$export$329de300752858e8","$54720ec60cee9716$export$2e59fa295abca125","$54720ec60cee9716$export$aa350b96d91cd94","weekDayName","monthName","getUTCDate","$54720ec60cee9716$export$1428f42a7de81803","timeUnix","hours","getUTCHours","getMinutes","$54720ec60cee9716$export$257b40f71c07d58f","$54720ec60cee9716$export$abd85987e13f47a9","mps","$54720ec60cee9716$export$1cc391ae9dc165ba","message"],"version":3,"file":"index.8ec9f7d5.js.map"}